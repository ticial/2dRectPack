{"version":3,"file":"bundle.js","sources":["../../src/packer/Box.ts","../../src/packer/Packer.ts","../../src/index.ts"],"sourcesContent":["export class Box {\r\n  private _width: number;\r\n  private _height: number;\r\n  private _top: number;\r\n  private _left: number;\r\n  private _right: number;\r\n  private _bottom: number;\r\n  private _id: number;\r\n  private _mark: number;\r\n  needRemove: boolean = false;\r\n\r\n  constructor(width = 0, height = 0, left = 0, top = 0, right = 0, bottom = 0, id = 0, mark = 0) {\r\n    this._width = width;\r\n    this._height = height;\r\n    this._top = top;\r\n    this._left = left;\r\n    this._right = right;\r\n    this._bottom = bottom;\r\n    this._id = id;\r\n    this._mark = mark;\r\n  }\r\n\r\n  get width(): number {\r\n    return this._width;\r\n  }\r\n\r\n  get height(): number {\r\n    return this._height;\r\n  }\r\n\r\n  get top(): number {\r\n    return this._top;\r\n  }\r\n\r\n  get left(): number {\r\n    return this._left;\r\n  }\r\n\r\n  get right(): number {\r\n    return this._right;\r\n  }\r\n\r\n  get bottom(): number {\r\n    return this._bottom;\r\n  }\r\n\r\n  get id(): number {\r\n    return this._id;\r\n  }\r\n\r\n  set id(value: number) {\r\n    this._id = value;\r\n  }\r\n\r\n  get mark(): number {\r\n    return this._mark;\r\n  }\r\n\r\n  set mark(value: number) {\r\n    this._mark = value;\r\n  }\r\n\r\n  static createFromSize(width: number, height: number, id = 0, mark = 0): Box {\r\n    return new Box(width, height, 0, 0, width, height, id, mark);\r\n  }\r\n\r\n  static createFromCoord(left: number, top: number, right: number, bottom: number, id = 0, mark = 0): Box {\r\n    return new Box(right - left, bottom - top, left, top, right, bottom, id, mark);\r\n  }\r\n\r\n  clone(): Box {\r\n    return new Box(this.width, this.height, this.left, this.top, this.right, this.bottom, this.id, 0);\r\n  }\r\n\r\n  setSize(width: number, height: number) {\r\n    this._width = width;\r\n    this._height = height;\r\n    this._right = this.left + width;\r\n    this._bottom = this.top + height;\r\n  }\r\n\r\n  setCoord(left: number, top: number, right: number, bottom: number) {\r\n    this._width = right - left;\r\n    this._height = bottom - top;\r\n    this._top = top;\r\n    this._left = left;\r\n    this._right = right;\r\n    this._bottom = bottom;\r\n  }\r\n\r\n  square() {\r\n    return this.width * this.height;\r\n  }\r\n\r\n  static isContained(a: Box, b: Box) {\r\n    return a.left >= b.left && a.top >= b.top && a.right <= b.right && a.bottom <= b.bottom;\r\n  }\r\n\r\n  static isTouched(a: Box, b: Box) {\r\n    return a.right > b.left && a.left < b.right && a.bottom > b.top && a.top < b.bottom;\r\n  }\r\n\r\n  static isSeparated(a: Box, b: Box) {\r\n    return !(b.left >= a.right || b.right <= a.left || b.top >= a.bottom || b.bottom <= a.top);\r\n  }\r\n}\r\n","import { Box } from \"./Box\";\r\n\r\nconst BOTTOM_RIGHT_MARK = Number.MAX_SAFE_INTEGER;\r\n\r\n/**\r\n * Packer class for efficiently packing boxes into a container.\r\n */\r\nclass Packer {\r\n  private boxes: Box[] = [];\r\n  private packedBoxes: Box[] = [];\r\n  private freeBoxes: Box[] = [];\r\n  private badBoxes: Box[] = [];\r\n  private notPlacedBoxes: Box[] = [];\r\n  private isPrepared = false;\r\n  private _fullness = -1;\r\n\r\n  constructor(private containerWidth: number, private containerHeight: number) {}\r\n\r\n  /**\r\n   * Resizes the container dimensions for the Packer instance.\r\n   *\r\n   * @param width - The new width of the container.\r\n   * @param height - The new height of the container.\r\n   */\r\n  resizeContainer(width: number, height: number) {\r\n    this.containerWidth = width;\r\n    this.containerHeight = height;\r\n  }\r\n\r\n  /**\r\n   * Clears all data, resetting the state of the packing algorithm.\r\n   */\r\n  clear() {\r\n    this.boxes.length = 0;\r\n    this.reset();\r\n  }\r\n\r\n  /**\r\n   * Resets the state of the packing algorithm, clearing various lists and resetting variables.\r\n   * This method is called internally during the preparation phase.\r\n   */\r\n  private reset() {\r\n    this.packedBoxes.length = 0;\r\n    this.freeBoxes.length = 0;\r\n    this.badBoxes.length = 0;\r\n    this.notPlacedBoxes.length = 0;\r\n    this._fullness = -1;\r\n    this.isPrepared = false;\r\n  }\r\n\r\n  /**\r\n   * Adds a box to the list of boxes, automatically rotating it if the width is greater than the height.\r\n   *\r\n   * @param width - The width of the box.\r\n   * @param height - The height of the box.\r\n   * @param id - The identifier for the box (optional, default is 0).\r\n   */\r\n  addBox(width: number, height: number, id: number = 0) {\r\n    const box = Box.createFromSize(Math.min(width, height), Math.max(width, height), id);\r\n    this.boxes.push(box);\r\n    this.isPrepared = false;\r\n  }\r\n\r\n  /**\r\n   * Prepares the algorithm for packing by filtering out bad boxes, sorting them, and adding an initial free box.\r\n   * This method should be called before packing the boxes.\r\n   */\r\n  prepare() {\r\n    this.reset();\r\n    this.boxes = this.filterBadBoxes(this.boxes);\r\n    this.boxes.sort((a, b) => (a.width === b.width ? b.height - a.height : b.width - a.width));\r\n    this.addFreeBox(0, 0, this.containerWidth, this.containerHeight);\r\n    this.isPrepared = true;\r\n  }\r\n\r\n  /**\r\n   * Filters out oversized and undersized boxes, adding them to the list of bad boxes.\r\n   *\r\n   * @param boxes - An array of boxes to be filtered.\r\n   * @returns An array of filtered boxes that meet the size criteria.\r\n   */\r\n  private filterBadBoxes(boxes: Box[]) {\r\n    return boxes.filter(box => {\r\n      if (\r\n        (box.width > this.containerWidth && box.width > this.containerHeight) ||\r\n        (box.height > this.containerWidth && box.height > this.containerHeight) ||\r\n        (box.width <= 0 || box.height <= 0)\r\n      ) {\r\n        this.badBoxes.push(box);\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Packs the available boxes into containers using a specific algorithm.\r\n   * The method first prepares the data if not already prepared.\r\n   * It then iterates through the boxes, finding the best position for each,\r\n   * and adds the packed boxes to the list of packedBoxes.\r\n   * Finally, it collects the boxes that couldn't be placed into notPlacedBoxes.\r\n   *\r\n   * @returns An array containing the packed boxes.\r\n   */\r\n  pack(): Box[] {\r\n    // Prepare data if not already prepared\r\n    if (!this.isPrepared) this.prepare();\r\n\r\n    const boxes = this.boxes;\r\n    const packedBoxes = this.packedBoxes;\r\n    const testBox = new Box();\r\n\r\n    // Iterate through the remaining unpacked boxes\r\n    while (boxes.length !== packedBoxes.length) {\r\n      let bestScore = 0;\r\n      let bestBoxIndex = -1;\r\n      let bestBox: Box;\r\n\r\n      // Find the best position for each box\r\n      for (let i = 0, total = boxes.length; i < total; i++) {\r\n        if (boxes[i].needRemove) continue;\r\n        this.findBoxPosition(boxes[i], testBox);\r\n        if (testBox.mark > bestScore) {\r\n          bestScore = testBox.mark;\r\n          bestBox = testBox.clone();\r\n          bestBoxIndex = i;\r\n        }\r\n      }\r\n\r\n      // Check if a valid position was found\r\n      if (bestBoxIndex === -1 || !bestBox) {\r\n        break;\r\n      }\r\n\r\n      // Add the bestBox to the list of packed boxes and mark the original box as removed\r\n      this.addPackedBox(bestBox);\r\n      boxes[bestBoxIndex].needRemove = true;\r\n    }\r\n\r\n    // Collect the boxes that couldn't be placed into notPlacedBoxes\r\n    for (const box of boxes) {\r\n      if (!box.needRemove) {\r\n        this.notPlacedBoxes.push(box);\r\n      }\r\n      box.needRemove = false;\r\n    }\r\n\r\n    return this.packedBoxes;\r\n  }\r\n\r\n  /**\r\n   * Finds the best position for a given box within the available free boxes.\r\n   *\r\n   * @param box - The box to be positioned.\r\n   * @param testBox - The test box to store the final coordinates and score.\r\n   */\r\n  private findBoxPosition(box: Box, testBox: Box) {\r\n    let bestScore = -1;\r\n    testBox.mark = 0;\r\n\r\n    for (const freeBox of this.freeBoxes) {\r\n      // Check if the box can fit horizontally\r\n      if (freeBox.width >= box.width && freeBox.height >= box.height) {\r\n        let score = this.calculateScore(freeBox.left, freeBox.top, freeBox.left + box.width, freeBox.top + box.height);\r\n        if (score > bestScore) {\r\n          testBox.setCoord(freeBox.left, freeBox.top, freeBox.left + box.width, freeBox.top + box.height);\r\n          bestScore = score;\r\n        }\r\n      }\r\n      // Check if the box can fit vertically\r\n      if (freeBox.width >= box.height && freeBox.height >= box.width) {\r\n        let score = this.calculateScore(freeBox.left, freeBox.top, freeBox.left + box.height, freeBox.top + box.width);\r\n        if (score > bestScore) {\r\n          testBox.setCoord(freeBox.left, freeBox.top, freeBox.left + box.height, freeBox.top + box.width);\r\n          bestScore = score;\r\n        }\r\n      }\r\n    }\r\n    testBox.mark = bestScore;\r\n    testBox.id = box.id;\r\n  }\r\n\r\n  /**\r\n   * Calculates a score based on the specified coordinates, considering the placement of existing packed boxes.\r\n   * The score is determined by the length of common intervals with existing boxes.\r\n   *\r\n   * @param left - The left coordinate of the box.\r\n   * @param top - The top coordinate of the box.\r\n   * @param right - The right coordinate of the box.\r\n   * @param bottom - The bottom coordinate of the box.\r\n   * @returns The calculated score.\r\n   */\r\n  private calculateScore(left: number, top: number, right: number, bottom: number) {\r\n    let score = 0;\r\n\r\n    if (left === 0 || right === this.containerWidth) score += bottom - top;\r\n    if (top === 0 || bottom === this.containerHeight) score += right - left;\r\n\r\n    for (const box of this.packedBoxes) {\r\n      if (box.left === right || box.right === left) score += this.commonIntervalLength(box.top, box.bottom, top, bottom);\r\n      if (box.top === bottom || box.bottom === top) score += this.commonIntervalLength(box.left, box.right, left, right);\r\n    }\r\n    return score;\r\n  }\r\n\r\n  /**\r\n   * Calculates the length of the common interval between two ranges.\r\n   *\r\n   * @param startA - The start coordinate of the first range.\r\n   * @param endA - The end coordinate of the first range.\r\n   * @param startB - The start coordinate of the second range.\r\n   * @param endB - The end coordinate of the second range.\r\n   * @returns The length of the common interval or 0 if there is no overlap.\r\n   */\r\n  private commonIntervalLength(startA: number, endA: number, startB: number, endB: number): number {\r\n    return endA < startB || endB < startA ? 0 : Math.min(endA, endB) - Math.max(startA, startB);\r\n  }\r\n\r\n  /**\r\n   * Adds a packed box to the list of packed boxes, updating the list of free boxes by splitting and removing intersecting boxes.\r\n   *\r\n   * @param box - The box to be added to the list of packed boxes.\r\n   */\r\n  private addPackedBox(box: Box) {\r\n    const freeBoxes = this.freeBoxes;\r\n\r\n    // Split and mark intersecting free boxes\r\n    for (const freeBox of this.freeBoxes) {\r\n      if (Box.isSeparated(freeBox, box)) {\r\n        this.splitFreeBox(freeBox, box);\r\n        freeBox.needRemove = true;\r\n      }\r\n    }\r\n\r\n    // Mark fully contained free boxes\r\n    for (let i = 0; i < freeBoxes.length - 1; i++) {\r\n      const box1 = freeBoxes[i];\r\n      if (box1.needRemove) continue;\r\n      for (let j = i + 1; j < freeBoxes.length; j++) {\r\n        const box2 = freeBoxes[j];\r\n        if (box2.needRemove) continue;\r\n        if (Box.isContained(box1, box2)) {\r\n          box1.needRemove = true;\r\n          break;\r\n        }\r\n        if (Box.isContained(box2, box1)) {\r\n          box2.needRemove = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove marked free boxes and add the packed box\r\n    this.freeBoxes = this.freeBoxes.filter(box => !box.needRemove);\r\n    this.packedBoxes.push(box);\r\n  }\r\n  /**\r\n   * Splits the given free box based on the dimensions of the box.\r\n   * Adds new free boxes created from the non-overlapping regions.\r\n   *\r\n   * @param freeBox - The free box to be split.\r\n   * @param box - The box determining the split dimensions.\r\n   */\r\n  private splitFreeBox(freeBox: Box, box: Box) {\r\n    if (box.top > freeBox.top && box.top < freeBox.bottom) {\r\n      this.addFreeBox(freeBox.left, freeBox.top, freeBox.right, box.top);\r\n    }\r\n    if (box.bottom < freeBox.bottom) {\r\n      this.addFreeBox(freeBox.left, box.bottom, freeBox.right, freeBox.bottom);\r\n    }\r\n    if (box.left > freeBox.left && box.left < freeBox.right) {\r\n      this.addFreeBox(freeBox.left, freeBox.top, box.left, freeBox.bottom);\r\n    }\r\n    if (box.right < freeBox.right) {\r\n      this.addFreeBox(box.right, freeBox.top, freeBox.right, freeBox.bottom);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a new free box to the list of free boxes based on the specified coordinates.\r\n   *\r\n   * @param left - The left coordinate of the new free box.\r\n   * @param top - The top coordinate of the new free box.\r\n   * @param right - The right coordinate of the new free box.\r\n   * @param bottom - The bottom coordinate of the new free box.\r\n   */\r\n  private addFreeBox(left: number, top: number, right: number, bottom: number): void {\r\n    const box = Box.createFromCoord(left, top, right, bottom);\r\n    this.freeBoxes.push(box);\r\n  }\r\n\r\n  /**\r\n   * Calculates the fullness ratio of the container based on the free and packed boxes.\r\n   * The fullness ratio represents the occupied space in the container.\r\n   *\r\n   * @returns The fullness ratio, ranging from 0 to 1, where 0 means empty and 1 means fully occupied.\r\n   */\r\n  private calculateFullness() {\r\n    const freeBoxes = this.freeBoxes;\r\n    let nextMark = 1;\r\n\r\n    // Mark bottom-right corner of full-size free boxes\r\n    for (const box of freeBoxes) {\r\n      if (box.right === this.containerWidth && box.bottom === this.containerHeight) box.mark = BOTTOM_RIGHT_MARK;\r\n      else box.mark = 0;\r\n    }\r\n\r\n    // Mark touched free boxes with the same mark\r\n    for (let i = 0; i < freeBoxes.length - 1; i++) {\r\n      const box1 = freeBoxes[i];\r\n      for (let j = i + 1; j < freeBoxes.length; j++) {\r\n        const box2 = freeBoxes[j];\r\n        if (Box.isTouched(box1, box2)) {\r\n          let mark = Math.max(box1.mark, box2.mark);\r\n          if (mark === 0) mark = nextMark++;\r\n          box2.mark = box1.mark = mark;\r\n        }\r\n      }\r\n    }\r\n\r\n    const innerSquare = freeBoxes.reduce((accum, box) => (box.mark !== BOTTOM_RIGHT_MARK ? accum + box.square() : accum), 0);\r\n    const boxSquare = this.packedBoxes.reduce((accum, box) => accum + box.square(), 0);\r\n\r\n    // Calculate the fullness ratio\r\n    this._fullness = 1 - innerSquare / (boxSquare + innerSquare);\r\n  }\r\n\r\n  /**\r\n   * Retrieves the fullness ratio of the container. If the fullness has not been calculated yet,\r\n   * it calculates it using the `calculateFullness` method and returns the result.\r\n   *\r\n   * @returns The fullness ratio, ranging from 0 to 1, where 0 means empty and 1 means fully occupied.\r\n   */\r\n  get fullness() {\r\n    if (this._fullness === -1) this.calculateFullness();\r\n    return this._fullness;\r\n  }\r\n\r\n  boxesSize() {\r\n    return this.boxes.length;\r\n  }\r\n}\r\n\r\nexport default Packer;\r\n","import bloks from \"./blocksData.json\";\r\nimport Packer from \"./packer/Packer\";\r\nimport { RectCoord, Size } from \"./packer/types\";\r\n\r\nconst template = document.getElementById(\"rect-data-template\") as HTMLTemplateElement;\r\nconst containerDiv = document.querySelector(\".container\") as HTMLElement;\r\nconst fullnessSpan = document.getElementById(\"fullness\") as HTMLElement;\r\nconst rectList = document.querySelector(\".rect-list\") as HTMLElement;\r\n\r\nconst rectWidthInput = document.getElementById(\"rect-width\") as HTMLInputElement;\r\nconst rectHeightInput = document.getElementById(\"rect-height\") as HTMLInputElement;\r\nconst addRectButton = document.getElementById(\"add-rect-button\") as HTMLElement;\r\n\r\nconst containerWidthInput = document.getElementById(\"container-width\") as HTMLInputElement;\r\nconst containerHeightInput = document.getElementById(\"container-height\") as HTMLInputElement;\r\nconst setupContainerButton = document.getElementById(\"setup-container-button\") as HTMLElement;\r\n\r\nlet blocksParams: Size[] = bloks;\r\nlet containerSize: Size = { width: 350, height: 300 };\r\n\r\ncontainerWidthInput.value = String(containerSize.width);\r\ncontainerHeightInput.value = String(containerSize.height);\r\n\r\nconst packer = new Packer(containerSize.width, containerSize.height);\r\naddBlocks(blocksParams);\r\n\r\naddRectButton.onclick = event => {\r\n  event.preventDefault();\r\n  const rect: Size = {\r\n    width: parseInt(rectWidthInput.value),\r\n    height: parseInt(rectHeightInput.value)\r\n  };\r\n  addBlock(rect, packer.boxesSize());\r\n};\r\n\r\nsetupContainerButton.onclick = event => {\r\n  event.preventDefault();\r\n  resizeContainer(parseInt(containerWidthInput.value), parseInt(containerWidthInput.value));\r\n  update();\r\n};\r\n\r\nfunction resizeContainer(width: number, height: number) {\r\n  containerSize.width = width;\r\n  containerSize.height = height;\r\n  packer.resizeContainer(width, height);\r\n  update();\r\n}\r\n\r\nfunction addBlocks(blocks: Size[]) {\r\n  blocksParams = blocks;\r\n  blocks.forEach((block, i) => {\r\n    packer.addBox(block.width, block.height, i + 1);\r\n  });\r\n  update();\r\n}\r\n\r\nfunction addBlock(block: Size, id: number) {\r\n  blocksParams.push(block);\r\n  packer.addBox(block.width, block.height, id);\r\n  update();\r\n}\r\n\r\nfunction pack() {\r\n  const boxes = packer.pack();\r\n  const blockCoordinates: RectCoord[] = boxes.map(({ top, left, right, bottom, id }) => ({\r\n    top,\r\n    left,\r\n    right,\r\n    bottom,\r\n    initialOrder: id\r\n  }));\r\n  const fullness = packer.fullness;\r\n\r\n  return {\r\n    fullness,\r\n    blockCoordinates\r\n  };\r\n}\r\n\r\nfunction update() {\r\n  const { fullness, blockCoordinates } = pack();\r\n  fillRectList(blocksParams);\r\n  drawBlocks(containerSize, fullness, blockCoordinates);\r\n}\r\n\r\nfunction fillRectList(blocksParams: Size[]) {\r\n  rectList.innerHTML = \"\";\r\n  for (const block of blocksParams) {\r\n    const rectItem = template.content.cloneNode(true) as HTMLElement;\r\n    (<HTMLElement>rectItem.querySelector(\".width\")).innerHTML = block.width + \"\";\r\n    (<HTMLElement>rectItem.querySelector(\".height\")).innerHTML = block.height + \"\";\r\n    rectList.appendChild(rectItem);\r\n  }\r\n}\r\n\r\nfunction getRandomColor() {\r\n  var letters = \"0123456789ABCDEF\".split(\"\");\r\n  var color = \"#\";\r\n  for (var i = 0; i < 6; i++) {\r\n    color += letters[Math.round(Math.random() * 15)];\r\n  }\r\n  return color;\r\n}\r\n\r\nfunction createColorMapGenerator() {\r\n  const colorMap = new Map<string, string>();\r\n  const colorSet = new Set<string>();\r\n\r\n  return function(key: string) {\r\n    let color = colorMap.get(key);\r\n    if (!color) {\r\n      do {\r\n        color = getRandomColor();\r\n      } while (colorSet.has(color));\r\n      colorSet.add(color);\r\n      colorMap.set(key, color);\r\n    }\r\n    return color;\r\n  };\r\n}\r\n\r\nfunction drawBlocks(containerSize: Size, fullness: number, blockCoordinates: RectCoord[]) {\r\n  fullnessSpan.textContent = (fullness * 100).toFixed(2);\r\n  containerDiv.innerHTML = \"\";\r\n  containerDiv.style.width = containerSize.width + \"px\";\r\n  containerDiv.style.height = containerSize.height + \"px\";\r\n\r\n  const getColor = createColorMapGenerator();\r\n\r\n  for (const block of blockCoordinates) {\r\n    const rectDiv = document.createElement(\"div\") as HTMLElement;\r\n\r\n    const width = block.right - block.left;\r\n    const height = block.bottom - block.top;\r\n\r\n    rectDiv.classList.add(\"rect\");\r\n    rectDiv.style.bottom = block.top + \"px\";\r\n    rectDiv.style.left = block.left + \"px\";\r\n    rectDiv.style.width = width + \"px\";\r\n    rectDiv.style.height = height + \"px\";\r\n\r\n    const sizeKey = Math.min(width, height) + \"x\" + Math.max(width, height);\r\n    rectDiv.style.backgroundColor = getColor(sizeKey);\r\n\r\n    containerDiv.append(rectDiv);\r\n\r\n    const rectIdDiv = document.createElement(\"div\") as HTMLElement;\r\n    rectIdDiv.classList.add(\"rect-id\");\r\n    rectIdDiv.textContent = String(block.initialOrder);\r\n    rectDiv.append(rectIdDiv);\r\n  }\r\n}\r\n\r\nupdate();\r\n"],"names":[],"mappings":"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"}